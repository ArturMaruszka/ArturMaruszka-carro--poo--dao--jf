/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Carro;
import model.Pessoa;
import servicos.CarroServicos;
import servicos.PessoaServicos;
import servicos.ServicosFactory;
import util.Validadores;

/**
 *
 * @author 182120013
 */
public class JFCarro extends javax.swing.JFrame {

    /**
     * Creates new form JFCarro
     */
    public JFCarro() {
        initComponents();
        jbDeletar.setVisible(false);
        this.setLocationRelativeTo(null);
        addRowToTable();

    }
    public static String jfcambio2;

    public boolean validInputs() {
        if (jfplaca.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Placa obrigatório!");
            jfplaca.requestFocus();
            return false;
        } else if (jfmarca.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Marca obrigatório!");
            jfmarca.requestFocus();
            return false;
        } else if (jfmodelo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Modelo obrigatório!");
            jfmodelo.requestFocus();
            return false;
        } else if (jfcor.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Cor obrigatório!");
            jfcor.requestFocus();
            return false;
        } else if (jfanofab.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Ano de Fabricação obrigatório!");
            jfanofab.requestFocus();
            return false;
        } else if (jfanomod.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Ano do Modelo obrigatório!");
            jfanomod.requestFocus();
            return false;
        } else if (!jfmanual.isSelected() && !jfautomatico.isSelected()) {
            JOptionPane.showMessageDialog(this, "Campo Cambio obrigatório!");
            //jfcambio.requestFocus();
            return false;
        } else if (jfcombustivel.getSelectedItem().equals("Selecione...")) {
            JOptionPane.showMessageDialog(this, "Campo Combustivel obrigatório!");
            jfcombustivel.requestFocus();
            return false;
        } else if (jfproprietario.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Campo Proprietario obrigatório!");
            jfproprietario.requestFocus();
            return false;
        }
        return true;
    }

    public void addRowToTable() {
        DefaultTableModel model = (DefaultTableModel) jtCarros.getModel();
        model.getDataVector().removeAllElements();//remove todas as linhas
        model.fireTableDataChanged();
        Object rowData[] = new Object[9];
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
        for (Carro carro : carroS.getCarro()) {
            rowData[0] = carro.getPlaca();
            rowData[1] = carro.getMarca();
            rowData[2] = carro.getModelo();
            rowData[3] = carro.getCor();
            rowData[4] = carro.getAnoFab();
            rowData[5] = carro.getAnoMod();
            rowData[6] = carro.getTpCambio();
            rowData[7] = carro.getCombustivel();
            rowData[8] = carro.getProprietario().getNome();
            model.addRow(rowData);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jfcambio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jfmarca = new javax.swing.JTextField();
        jfmodelo = new javax.swing.JTextField();
        jfcor = new javax.swing.JTextField();
        jfproprietario = new javax.swing.JTextField();
        jfanofab = new javax.swing.JTextField();
        jfanomod = new javax.swing.JTextField();
        jffechar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbDeletar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtCarros = new javax.swing.JTable();
        jfplaca = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jfprop = new javax.swing.JLabel();
        jfcombustivel = new javax.swing.JComboBox<>();
        jfmanual = new javax.swing.JRadioButton();
        jfautomatico = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dubai", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("\\*Carros*/");

        jfproprietario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfproprietarioFocusLost(evt);
            }
        });
        jfproprietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfproprietarioActionPerformed(evt);
            }
        });
        jfproprietario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jfproprietarioKeyTyped(evt);
            }
        });

        jfanofab.setToolTipText("Insira o ano de fabricação do veiculo com 4 digitos.");
        jfanofab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfanofabFocusLost(evt);
            }
        });
        jfanofab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfanofabActionPerformed(evt);
            }
        });
        jfanofab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jfanofabKeyTyped(evt);
            }
        });

        jfanomod.setToolTipText("informe o ano do modelo do veiculo com 4 digitos.");
        jfanomod.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfanomodFocusLost(evt);
            }
        });
        jfanomod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jfanomodKeyTyped(evt);
            }
        });

        jffechar.setText("Exit");
        jffechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jffecharActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbDeletar.setText("Deletar");
        jbDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletarActionPerformed(evt);
            }
        });

        jtCarros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Placa", "Marca", "Modelo", "Cor", "Ano de Fabricação", "Ano do Modelo", "Tipo de Cambio", "Combustivel", "Proprietario"
            }
        ));
        jtCarros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCarrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtCarros);

        try {
            jfplaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-#H##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfplaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfplacaActionPerformed(evt);
            }
        });

        jLabel2.setText("Placa");

        jLabel3.setText("Marca");

        jLabel4.setText("Modelo");

        jLabel5.setText("Cor");

        jLabel6.setText("Proprietario");

        jLabel7.setText("Ano de Fabricação");

        jLabel8.setText("Ano do modelo");

        jLabel9.setText("Tipo de câmbio");

        jLabel10.setText("Combustivel");

        jfprop.setText("    ");
        jfprop.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jfcombustivel.setMaximumRowCount(3);
        jfcombustivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Álcool", "Gasolina", "Gás", "Flex", "Diesel" }));
        jfcombustivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfcombustivelActionPerformed(evt);
            }
        });

        jfcambio.add(jfmanual);
        jfmanual.setText("Manual");
        jfmanual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfmanualActionPerformed(evt);
            }
        });

        jfcambio.add(jfautomatico);
        jfautomatico.setText("Automático");
        jfautomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfautomaticoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbDeletar)
                        .addGap(18, 18, 18)
                        .addComponent(jbEditar)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(jbLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(jffechar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jfmarca, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(jfmodelo)
                                    .addComponent(jfcor)
                                    .addComponent(jfproprietario)
                                    .addComponent(jfplaca))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jfprop, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9))))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jfanofab, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jfanomod))
                                        .addGap(56, 56, 56))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jfcombustivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(59, 59, 59))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jfmanual)
                                            .addComponent(jfautomatico))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfanofab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfplaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jfmarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jfanomod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jfmodelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jfautomatico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jfmanual)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfcor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(jfcombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfproprietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jfprop))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jffechar)
                    .addComponent(jbLimpar)
                    .addComponent(jbSalvar)
                    .addComponent(jbEditar)
                    .addComponent(jbDeletar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(328, 328, 328))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        // TODO add your handling code here:
        if (jbLimpar.getText().equals("Limpar")) {
            limparCampos();

        } else {
            jbEditar.setEnabled(false);
            jbLimpar.setText("Limpar");
            limparCampos();
        }
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        if (validInputs()) {
            PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
            CarroServicos carroS = ServicosFactory.getCarroServicos();
            String placa = jfplaca.getText().toUpperCase();
            String marca = jfmarca.getText().toUpperCase();
            String modelo = jfmodelo.getText().toUpperCase();
            int anoFab = Integer.parseInt(jfanofab.getText());
            int anoMod = Integer.parseInt(jfanomod.getText());
            String cor = jfcor.getText().toUpperCase();
            String cambio = jfcambio2.toUpperCase();
            String combustivel = jfcombustivel.getSelectedItem().toString();
            Pessoa proprietario = pessoaS.getPessoaByDoc(jfproprietario.getText());
            Carro c = new Carro(placa, marca, modelo, anoFab, anoMod, cor, cambio, combustivel, proprietario);
            if (jbSalvar.getText().equals("Salvar")) {
                carroS.cadastroCarro(c);
            } else {
                carroS.atualizarCarro(c);
            }
            addRowToTable();
            jbLimpar.doClick();

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletarActionPerformed
        // TODO add your handling code here:
        int linha = jtCarros.getSelectedRow();
        String placa = (String) jtCarros.getValueAt(linha, 0);
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        Object[] btnMSG = {"Sim", "Não"};
        int resp = JOptionPane.showOptionDialog(this, "Deseja realmente deletar " + placa, "Deletar Carro", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, btnMSG, btnMSG[0]);
        if (resp == 0) {
            carroS.deletarCarro(placa);
            addRowToTable();
            JOptionPane.showMessageDialog(this, "Cadastro removido");
        } else {
            JOptionPane.showMessageDialog(this, "Operação cancelada pelo usuário");
        }
        jbLimpar.doClick();
    }//GEN-LAST:event_jbDeletarActionPerformed

    private void jffecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jffecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jffecharActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        // TODO add your handling code here:
        jbDeletar.setVisible(false);
        jbSalvar.setText("Confirmar");
        jbLimpar.setText("Cancelar");
        jfplaca.setEnabled(false);

        int linha = jtCarros.getSelectedRow();
        String placa = (String) jtCarros.getValueAt(linha, 0);
        CarroServicos carroS = ServicosFactory.getCarroServicos();
        Carro c = carroS.getCarroByDoc(placa);
        jfproprietario.setText(c.getProprietario().getCpf());
        jfplaca.setText(c.getPlaca());
        jfanofab.setText(Integer.toString(c.getAnoFab()));
        jfanomod.setText(Integer.toString(c.getAnoMod()));
        jfcor.setText(c.getCor());
        jfmarca.setText(c.getMarca());
        jfmodelo.setText(c.getModelo());
        jfcombustivel.setSelectedItem(c.getCombustivel());
        jfprop.setText(c.getProprietario().getNome());

        if (c.getTpCambio().equalsIgnoreCase("Manual")) {
            jfmanual.setSelected(true);
        } else {
            jfautomatico.setSelected(true);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jtCarrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCarrosMouseClicked
        // TODO add your handling code here:
        jbDeletar.setVisible(true);
        jbEditar.setEnabled(true);
    }//GEN-LAST:event_jtCarrosMouseClicked

    private void jfplacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfplacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfplacaActionPerformed

    private void jfproprietarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfproprietarioFocusLost
        // TODO add your handling code here:
        if (!jfproprietario.getText().equals("")) {
            PessoaServicos pessoaS = ServicosFactory.getPessoaServicos();
            String cpf, nome;
            cpf = jfproprietario.getText();
            if (Validadores.isCPF(cpf)) {
                nome = pessoaS.getPessoaByDoc(cpf).getNome();
                if (nome == null) {
                    JOptionPane.showMessageDialog(this, "Pessoa não existe");
                    jfproprietario.requestFocus();
                } else {
                    Object[] btnMSG = {"Sim", "Não"};
                    int resp = JOptionPane.showOptionDialog(this, "Tem certeza que " + nome + " é o proprietário?", " Propiretário ", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, btnMSG, btnMSG[0]);
                    if (resp == 0) {
                        jfprop.setText(nome);
                    } else {
                        jfproprietario.requestFocus();
                        jfproprietario.setText("");
                    }

                }
            } else {
                JOptionPane.showMessageDialog(this, "cpf invalido");
                jfproprietario.requestFocus();
            }
        }
    }//GEN-LAST:event_jfproprietarioFocusLost

    private void jfproprietarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfproprietarioKeyTyped
        // TODO add your handling code here:
        if (jfanomod.getText().length() < 4) {
            String num = "0123456789";
            if (!num.contains(evt.getKeyChar() + "")) {
                evt.consume();
            } else {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jfproprietarioKeyTyped

    private void jfanomodFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfanomodFocusLost
        // TODO add your handling code here:
        int anoFab = Integer.parseInt(jfanofab.getText());
        int anoMod = Integer.parseInt(jfanomod.getText());
        if (!Validadores.validarAnoCarro(anoFab, anoMod)) {
            JOptionPane.showMessageDialog(this, "Informações referentes ao ano de fabricação e modelo inválidas!");
            jfanofab.requestFocus();
        }
    }//GEN-LAST:event_jfanomodFocusLost

    private void jfanofabFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfanofabFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jfanofabFocusLost

    private void jfanofabKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfanofabKeyTyped
        // TODO add your handling code here:
        if (jfanofab.getText().length() < 4) {
            String num = "0123456789";
            if (!num.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_jfanofabKeyTyped

    private void jfanomodKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfanomodKeyTyped
        // TODO add your handling code here:
       if (jfanomod.getText().length() < 4) {
            String num = "0123456789";
            if (!num.contains(evt.getKeyChar() + "")) {
                evt.consume();
            }
        } else {
            evt.consume();
        }
    }//GEN-LAST:event_jfanomodKeyTyped

    private void jfautomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfautomaticoActionPerformed
        // TODO add your handling code here:
        jfcambio2 = evt.getActionCommand();
    }//GEN-LAST:event_jfautomaticoActionPerformed

    private void jfmanualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfmanualActionPerformed
        // TODO add your handling code here:
        jfcambio2 = evt.getActionCommand();
    }//GEN-LAST:event_jfmanualActionPerformed

    private void jfproprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfproprietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfproprietarioActionPerformed

    private void jfcombustivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfcombustivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfcombustivelActionPerformed

    private void jfanofabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfanofabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfanofabActionPerformed
    public void limparCampos() {
        jfplaca.setText("");
        jfmarca.setText("");
        jfmodelo.setText("");
        jfanofab.setText("");
        jfanomod.setText("");
        jfcambio.clearSelection();
        jfcombustivel.setSelectedIndex(0);
        //jfcombustivel.setSelectedItem("Selecione..."); também funciona, mas o texto referido tem de ser identico ao texto do menu.
        jfproprietario.setText("");
        jfcor.setText("");
        jfprop.setText(" ");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFCarro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbDeletar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTextField jfanofab;
    private javax.swing.JTextField jfanomod;
    private javax.swing.JRadioButton jfautomatico;
    private javax.swing.ButtonGroup jfcambio;
    private javax.swing.JComboBox<String> jfcombustivel;
    private javax.swing.JTextField jfcor;
    private javax.swing.JButton jffechar;
    private javax.swing.JRadioButton jfmanual;
    private javax.swing.JTextField jfmarca;
    private javax.swing.JTextField jfmodelo;
    private javax.swing.JFormattedTextField jfplaca;
    private javax.swing.JLabel jfprop;
    private javax.swing.JTextField jfproprietario;
    private javax.swing.JTable jtCarros;
    // End of variables declaration//GEN-END:variables
}
